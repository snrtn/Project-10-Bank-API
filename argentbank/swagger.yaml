swagger: '2.0'
info:
  version: '1.0.0'
  title: 'Bank Argent API'
host: 'localhost:3001'
basePath: '/api/v1'
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: 'Login'
      description: 'API for Login'
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/LoginRequest'
      responses:
        '200':
          description: 'Login Successfully. User authenticated and token returned.'
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: 'Invalid Fields. Required fields are missing or invalid.'
        '401':
          description: 'Unauthorized due to invalid credentials.'
        '404':
          description: 'User not found.'
        '500':
          description: 'Internal Server Error. Error occurred on the server.'
  /user/signup:
    post:
      tags:
        - User Module
      summary: 'Signup'
      description: 'API for Signup'
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RegisterRequest'
      responses:
        '200':
          description: 'Signup Successfully. User registered and token returned.'
          schema:
            $ref: '#/definitions/RegisterResponse'
        '400':
          description: 'Invalid Fields. Required fields are missing or invalid.'
        '401':
          description: 'Unauthorized due to invalid or missing token.'
        '404':
          description: 'Page not found.'
        '500':
          description: 'Internal Server Error. Error occurred on the server.'
  /user/profile:
    get:
      tags:
        - User Module
      security:
        - Bearer: []
      summary: 'User Profile API'
      description: 'API for fetching a user profile'
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
      responses:
        '200':
          description: 'User profile retrieved successfully.'
          schema:
            $ref: '#/definitions/ProfileResponse'
        '400':
          description: 'Invalid Fields. Required fields are missing or invalid.'
        '401':
          description: 'Unauthorized. Invalid or missing token.'
        '404':
          description: 'User Not Found.'
        '500':
          description: 'Internal Server Error. Error occurred on the server.'
    put:
      tags:
        - User Module
      security:
        - Bearer: []
      summary: 'User Profile API'
      description: 'API for updating a user profile'
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ProfileUpdateRequest'
      responses:
        '200':
          description: 'User profile updated successfully.'
          schema:
            $ref: '#/definitions/ProfileUpdateResponse'
        '400':
          description: 'Invalid Fields. Required fields are missing or invalid.'
        '401':
          description: 'Unauthorized. Invalid or missing token.'
        '404':
          description: 'User Not Found.'
        '500':
          description: 'Internal Server Error. Error occurred on the server.'
  /user/profile/transactions:
    get:
      tags:
        - Transactions
      security:
        - Bearer: []
      summary: 'Retrieve all transactions for the user'
      description: 'API endpoint for fetching all transactions associated with the user.'
      parameters:
        - in: header
          name: Authorization
          description: 'Bearer token for authorization'
          required: true
          type: 'string'
      responses:
        '200':
          description: 'Transactions retrieved successfully.'
          schema:
            type: 'array'
            items:
              $ref: '#/definitions/TransactionResponse'
        '401':
          description: 'Unauthorized. Invalid or missing token.'
        '500':
          description: 'Internal Server Error. Error occurred on the server.'
    /user/profile/transactions/{transactionId}:
    get:
      tags:
        - Transactions
      security:
        - Bearer: []
      summary: 'Retrieve a specific transaction'
      description: 'API endpoint for fetching a specific transaction by its ID.'
      parameters:
        - in: header
          name: Authorization
          description: 'Bearer token for authorization'
          required: true
          type: 'string'
        - in: path
          name: transactionId
          required: true
          type: 'string'
          description: 'The ID of the transaction to retrieve'
      responses:
        '200':
          description: 'Transaction retrieved successfully.'
          schema:
            $ref: '#/definitions/TransactionResponse'
        '400':
          description: 'Invalid transaction ID.'
        '401':
          description: 'Unauthorized. Invalid or missing token.'
        '404':
          description: 'Transaction not found.'
        '500':
          description: 'Internal Server Error. Error occurred on the server.'
    put:
      tags:
        - Transactions
      security:
        - Bearer: []
      summary: 'Update a specific transaction'
      description: 'API endpoint for updating a specific transaction by its ID.'
      parameters:
        - in: header
          name: Authorization
          description: 'Bearer token for authorization'
          required: true
          type: 'string'
        - in: path
          name: transactionId
          required: true
          type: 'string'
          description: 'The ID of the transaction to update'
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TransactionUpdateRequest'
      responses:
        '200':
          description: 'Transaction updated successfully.'
          schema:
            $ref: '#/definitions/TransactionUpdateResponse'
        '400':
          description: 'Invalid transaction ID or fields.'
        '401':
          description: 'Unauthorized. Invalid or missing token.'
        '404':
          description: 'Transaction not found.'
        '500':
          description: 'Internal Server Error. Error occurred on the server.'
    delete:
      tags:
        - Transactions
      security:
        - Bearer: []
      summary: 'Delete a specific transaction'
      description: 'API endpoint for deleting a specific transaction by its ID.'
      parameters:
        - in: header
          name: Authorization
          description: 'Bearer token for authorization'
          required: true
          type: 'string'
        - in: path
          name: transactionId
          required: true
          type: 'string'
          description: 'The ID of the transaction to delete'
      responses:
        '200':
          description: 'Transaction deleted successfully.'
        '400':
          description: 'Invalid transaction ID.'
        '401':
          description: 'Unauthorized. Invalid or missing token.'
        '404':
          description: 'Transaction not found.'
        '500':
          description: 'Internal Server Error. Error occurred on the server.'

  /user/profile/transactions/monthly/{accountId}:
    get:
      tags:
        - Transactions
      security:
        - Bearer: []
      summary: 'Retrieve transactions for the current month by account ID'
      description: 'API endpoint for fetching all transactions for the current month, grouped by account ID.'
      parameters:
        - in: header
          name: Authorization
          description: 'Bearer token for authorization'
          required: true
          type: 'string'
        - in: path
          name: accountId
          required: true
          type: 'string'
          description: 'Account ID to filter transactions'
      responses:
        '200':
          description: 'Transactions for the current month retrieved successfully.'
          schema:
            type: 'array'
            items:
              $ref: '#/definitions/TransactionResponse'
        '401':
          description: 'Unauthorized. Invalid or missing token.'
        '500':
          description: 'Internal Server Error. Error occurred on the server.'
definitions:
  LoginRequest:
    type: object
    properties:
      email:
        type: string
        format: email
        description: User's email
        example: j.doe@example.com
      password:
        type: string
        format: password
        description: User's password
        example: securePass123
  LoginResponse:
    type: object
    properties:
      status:
        type: integer
        description: Response code from the API
        example: 200
      message:
        type: string
        description: Message from the API
        example: 'Login successful.'
      body:
        type: object
        properties:
          token:
            type: string
            description: Token created by the API
            example: 'eyJhbG...snipped...KQssw5c'
  RegisterRequest:
    type: object
    properties:
      email:
        type: string
        format: email
        description: User's email
        example: new_user@example.com
      password:
        type: string
        format: password
        description: User's password
        example: newPassword!
      lastName:
        type: string
        description: User's last name
        example: User
      firstName:
        type: string
        description: User's first name
        example: New
  RegisterResponse:
    type: object
    properties:
      status:
        type: integer
        description: Response code from the API
        example: 201
      message:
        type: string
        description: Response message from the API
        example: 'User successfully registered.'
      body:
        type: object
        properties:
          _id:
            type: string
            format: uuid
            description: User's UUID
            example: '123e4567-e89b-12d3-a456-426614174000'
          email:
            type: string
            format: email
            description: User's email
            example: new_user@example.com
  ProfileResponse:
    type: object
    properties:
      status:
        type: integer
        description: Response status code from the API
        example: 200
      message:
        type: string
        description: Response message from the API
        example: 'Profile retrieved.'
      body:
        type: object
        properties:
          email:
            type: string
            format: email
            description: User's email
            example: j.doe@example.com
  ProfileUpdateRequest:
    type: object
    properties:
      firstName:
        type: string
        description: Updated first name
        example: John
      lastName:
        type: string
        description: Updated last name
        example: Doe
  ProfileUpdateResponse:
    type: object
    properties:
      status:
        type: integer
        description: Response code from the API
        example: 200
      message:
        type: string
        description: Response message from the API
        example: 'Profile updated successfully.'
  TransactionResponse:
    type: object
    properties:
      status:
        type: integer
        example: 200
      message:
        type: string
        example: 'Transaction details retrieved.'
      transaction:
        type: object
        properties:
          id:
            type: string
            format: uuid
            description: Transaction's UUID
            example: 'abcd1234-5678-90ef-a123-456789abcdef'
          date:
            type: string
            format: date-time
            description: Transaction date
            example: '2023-03-15T10:00:00Z'
          description:
            type: string
            description: Transaction description
            example: 'Grocery shopping'
          amount:
            type: integer
            description: Amount in cents
            example: 2599
          balance:
            type: integer
            description: Balance after transaction
            example: 102300
          type:
            type: string
            description: Transaction type
            example: 'debit'
          category:
            type: string
            description: Category of transaction
            example: 'Groceries'
          notes:
            type: string
            description: Additional notes
            example: 'Whole Foods purchase'
  TransactionUpdateRequest:
    type: object
    properties:
      category:
        type: string
        description: Updated category
        example: 'Utilities'
      notes:
        type: string
        description: Additional notes
        example: 'Electric bill payment'
  TransactionUpdateResponse:
    type: object
    properties:
      status:
        type: integer
        description: Response status code
        example: 200
      message:
        type: string
        description: Response message
        example: 'Transaction updated successfully.'
      transaction:
        type: object
        properties:
          id:
            type: string
            format: uuid
            description: Updated transaction's UUID
            example: 'abcd1234-5678-90ef-a123-456789abcdef'
